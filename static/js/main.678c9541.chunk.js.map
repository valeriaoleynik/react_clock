{"version":3,"sources":["components/Clock.tsx","services/name.ts","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","clearInterval","clockName","props","className","React","PureComponent","getRandomName","value","now","toString","App","hasClock","handleDocumentRightClick","event","preventDefault","handleDocumentLeftClick","button","document","addEventListener","_prevProps","prevState","prevClockName","debug","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAE1BM,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAZP,kCAeE,WACEN,OAAOO,cAAcR,KAAKD,WAhB9B,oBAmBE,WACE,IAAQU,EAAcT,KAAKU,MAAnBD,UACAZ,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGd,EAAKS,cAAcC,OAAO,IAAK,YAhC1C,GAA2BK,IAAMC,eCV1B,SAASC,IACd,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GCQX,IAAMG,EAAb,4MACEtB,MAAe,CACbuB,UAAU,EACVV,UAAW,WAHf,EAMEV,QAAU,EANZ,EAgCEqB,yBAA2B,SAACC,GAC1BA,EAAMC,iBACN,EAAKnB,SAAS,CAAEgB,UAAU,KAlC9B,EAqCEI,wBAA0B,SAACF,GACzBA,EAAMC,iBACe,IAAjBD,EAAMG,QACR,EAAKrB,SAAS,CAAEgB,UAAU,KAxChC,uDAQE,WAA2B,IAAD,OACxBnB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEM,UAAWK,QAC1B,MACHW,SAASC,iBAAiB,cAAe1B,KAAKoB,0BAC9CK,SAASC,iBAAiB,QAAS1B,KAAKuB,2BAb5C,gCAgBE,SACEI,EACAC,GAEA,IAAMC,EAAgBD,EAAUnB,UAE5BoB,IAAkB7B,KAAKJ,MAAMa,WAAaT,KAAKJ,MAAMuB,UAEvDf,QAAQ0B,MAAR,uBAA8BD,EAA9B,eAAkD7B,KAAKJ,MAAMa,cAxBnE,kCA4BE,WACER,OAAOO,cAAcR,KAAKD,WA7B9B,oBA4CE,WACE,MAAgCC,KAAKJ,MAA7BuB,EAAR,EAAQA,SAAUV,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOV,UAAWA,WApD5B,GAAyBG,IAAMC,eCR/BkB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.678c9541.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  time: Date;\n};\n\nexport class Clock extends React.PureComponent<Props, State> {\n  state: State = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","export function getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\nimport { getRandomName } from './services/name';\n\ntype Props = {};\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.PureComponent<Props, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    document.addEventListener('contextmenu', this.handleDocumentRightClick);\n    document.addEventListener('click', this.handleDocumentLeftClick);\n  }\n\n  componentDidUpdate(\n    _prevProps: unknown,\n    prevState: State,\n  ): void {\n    const prevClockName = prevState.clockName;\n\n    if (prevClockName !== this.state.clockName && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  handleDocumentRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleDocumentLeftClick = (event: MouseEvent) => {\n    event.preventDefault();\n    if (event.button === 0) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}